# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Test in pkg

on:
  push:
    branches: [ "main", "feature/*", "serverlessFork"]
  pull_request:
    branches: [ "main", "feature/*", "serverlessFork"]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.22.x']
    steps:
    - uses: actions/checkout@v4

    - name: Set Up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install nginx
      run: |
        sudo apt install nginx
        sudo systemctl stop nginx
        sudo systemctl disable nginx
        sudo mkdir -p /mydata/nginx/

    - name: Install dependencies
      run: |
        sudo go mod init minik8s
        sudo go mod tidy
        sudo chmod 777 ./tools/setup_scripts/setup.sh 
        sudo ./tools/setup_scripts/setup.sh

    - name: TestDNS
      run: |
        sudo go build ./pkg/dns/dns_test/dns-test.go
        sudo mkdir -p /ZTH/Minik8s/pkg/dns/dns_op/
        sudo cp ./pkg/dns/dns_op/nginx.tmpl /ZTH/Minik8s/pkg/dns/dns_op/
        sudo ./dns-test
        sudo rm ./dns-test

    - name: TestEtcd
      run: |
        sudo go test ./pkg/etcd/etcd_test.go

    - name: TestKubeProxy
      run: |
        sudo go build ./pkg/kube_proxy/Main/test_proxy.go
        sudo ./test_proxy 10.1.0.23 127.0.0.1
        sudo rm ./test_proxy

    - name: TestKubelet
      run: |
        sudo go build ./pkg/kubelet/main.go
        sudo ./main
        sudo rm main
        sudo go test ./pkg/kubelet/container_manager/container_test.go
        sudo go test ./pkg/image_manager/image_manage_test.go

    - name: TestMonitor
      run: |
        sudo go test ./pkg/monitor/test_monitor.go
